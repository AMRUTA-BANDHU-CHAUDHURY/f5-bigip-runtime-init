{
    "properties": {
        "runtime_parameters": {
            "title": "Runtime Parameters",
            "description": "Runtime parameters (used during future template rendering)",
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": ["static", "secret", "metadata"]
                    },
                    "value": { 
                        "type": "string" 
                    },
                    "secretProvider": {
                        "type": "object",
                        "properties": {
                            "environment": {
                                "type": "string",
                                "enum": ["gcp", "aws", "azure"]
                            },
                            "type": {
                                "type": "string",
                                "enum": ["SecretsManager", "SecretManager", "default", "KeyVault"]
                            },
                            "secretId": {
                                "description": "ID or name of the secret in the secret manager of the specified cloud",
                                "type": "string"
                            },
                            "version": {
                                "description": "Version identifier for the secret to be retrieved",
                                "type": "string"
                            },
                            "vaultUrl": {
                                "description": "URL of the Azure Key Vault",
                                "type": "string",
                                "pattern": "(https?:\/\/(.+?\\.)?vault\\.azure\\.net(\/[A-Za-z0-9\\-\\._~:\/\\?#\\[\\]@!$&'\\(\\)\\*\\+,;\\=]*)?)"
                            }
                        },
                        "allOf": [
                            {
                                "if": { "properties": { "environment": { "const": "azure" } } },
                                "then": { "required": ["vaultUrl"] }
                            }
                        ],
                        "required": ["environment", "type", "secretId"],
                        "additionalProperties": false
                    },
                    "metadataProvider": {
                        "type": "object",
                        "properties": {
                            "environment": {
                                "type": "string",
                                "enum": ["gcp", "aws", "azure"]
                            },
                            "type": {
                                "type": "string",
                                "enum": ["network", "compute"]
                            },
                            "field": {
                              	"type": "string"
                            },
                            "index": {
                              	"type": "integer"
                            }
                        },
                        "allOf": [
                            {
                                "if": { "properties": { "type": { "const": "compute" } } },
                                "then": { "properties": { "field": { "type": "string", "enum": ["name"] } }, "required": ["field"] }
                            },
                            {
                                "if": { "properties": { "type": { "const": "network" } } },
                                "then": { "properties": { "field": { "type": "string", "enum": ["ipv4", "ipv6"] }, "index": { "type": "integer", "minimum": 1, "maximum": 8 } }, "required": ["field", "index"] }
                            }
                        ],
                        "required": ["environment", "type"],
                        "additionalProperties": false
                    }
                },
                "allOf": [
                    {
                        "if": { "properties": { "type": { "const": "static" } } },
                        "then": { "required": ["value"] }
                    }
                ],
                "required": ["name", "type"],
                "additionalProperties": false
            }
        },
        "post_onboard_enabled": {
            "title": "Post Onboard Commands",
            "description": "Used to specify post onboars commands which will be executed as last phase within onboard",
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": ["inline", "file", "url"]
                    },
                    "command": {
                        "type": "array",
                        "items" : {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "pre_onboard_enabled": {
            "title": "Pre Onboard Commands",
            "description": "Used to specify pre onboars commands which will be executed as a first step within onboard",
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": ["inline", "file", "url"]
                    },
                    "command": {
                        "type": "array",
                        "items" : {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "extension_packages": {
            "title": "Extension Packages",
            "description": "Used to specify packages to be installed on device",
            "type": "object",
            "properties": {
                "install_operations": {
                    "title": "Install Operations",
                    "description": "Specify the type and version of packages to install",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "extensionType": {
                                "type": "string",
                                "enum": ["do", "as3", "ts", "cf"]
                            },
                            "extensionVersion": {
                                "type": "string"
                            },
                            "extensionHash": {
                                "type": "string"
                            }
                        },
                        "required": ["extensionType", "extensionVersion"],
                        "additionalProperties": false
                    }
                }
            },
            "required": ["install_operations"],
            "additionalProperties": false
        },
        "extension_services": {
            "title": "Extension Services",
            "description": "Used to specify operations to be performed against specific services on device",
            "type": "object",
            "properties": {
                "service_operations": {
                    "title": "Service Operations",
                    "description": "Specify the operations to be performed against the specified services",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "extensionType": {
                                "type": "string",
                                "enum": ["do", "as3", "ts", "cf"]
                            },
                            "type": {
                                "$comment": "url in case of local file (file:) or remote (https: or http:) and inline in case the declaration is part of the config file",
                                "type": "string",
                                "enum": ["url", "inline"]
                            },
                            "value": {
                                "description": "URL of local or remote file containing the declarations to be applied, or the entire declaration inline as an object"
                            }
                        },
                        "allOf": [
                            {
                                "if": { "properties": { "type": { "const": "url" } } },
                                "then": { "properties": { "value": { "type": "string", "pattern": "^(https?|file):\/\/[^\\s$.?#].[^\\s]*$"} }, "required": ["value"] }
                            },
                            {
                                "if": { "properties": { "type": { "const": "inline" } } },
                                "then": { "properties": { "value": { "type": "object"} }, "required": ["value"] }
                            }
                        ],
                        "required": [],
                        "additionalProperties": false
                    }
                }
            },
            "required": ["service_operations"],
            "additionalProperties": false
        },
        "host": {
            "title": "Host Parameters",
            "description": "Details of the local or remote device",
            "type": "object",
            "properties": {
                "address": {
                    "description": "URL or IP of the device",
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string",
                    "enum": ["http", "https"]
                },
                "username": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            },
            "required": ["address", "port", "protocol", "username", "password"],
            "additionalProperties": false
        }
    },
    "required": ["extension_packages", "extension_services"],
    "additionalProperties": false
}
